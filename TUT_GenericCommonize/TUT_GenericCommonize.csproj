<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.props" Condition="Exists('..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{A722BD29-6C7C-4634-85B2-615762D78039}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>TUT_GenericCommonize</RootNamespace>
    <AssemblyName>TUT_GenericCommonize</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">15.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="MCALConfGen.Fakes">
      <HintPath>FakesAssemblies\MCALConfGen.Fakes.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.QualityTools.Testing.Fakes, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.TestPlatform.TestFramework, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\packages\MSTest.TestFramework.1.3.2\lib\net45\Microsoft.VisualStudio.TestPlatform.TestFramework.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\packages\MSTest.TestFramework.1.3.2\lib\net45\Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="mscorlib.4.0.0.0.Fakes">
      <HintPath>FakesAssemblies\mscorlib.4.0.0.0.Fakes.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.4.0.0.0.Fakes">
      <HintPath>FakesAssemblies\System.4.0.0.0.Fakes.dll</HintPath>
    </Reference>
    <Reference Include="System.Core" />
    <Reference Include="System.XML" />
    <Reference Include="System.XML.4.0.0.0.Fakes">
      <HintPath>FakesAssemblies\System.XML.4.0.0.0.Fakes.dll</HintPath>
    </Reference>
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Xml.Linq.4.0.0.0.Fakes">
      <HintPath>FakesAssemblies\System.Xml.Linq.4.0.0.0.Fakes.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Business\CommandLine\TestCommandLine.checkConfigOptionFileName.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.checkExplicitOptions.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.checkInvalidOption.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.checkMissingValueForOption.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.checkOutputDirectory.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.cs" />
    <Compile Include="Business\CommandLine\TestCommandLine.DisplayCmdInformation.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.displayToolVersion.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.filterValueVendorName.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.GetAndValidateModuleName.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.getOptionValueFromXmlConfig.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.parseAndValidateOptions.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.parseUserInputs.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.parseXmlConfig.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.PrintToolInfo.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.ProcessCommandLine.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.showInvalidInputPath.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.showInvalidOutputPath.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.validateAcceptedFiles.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.validateBothUserAndXmlInputs.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.validateUserInputs.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestCommandLine.validateXmlConfig.g.cs">
      <DependentUpon>TestCommandLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\CommandLine\TestOptionAttribute.cs" />
    <Compile Include="Business\CommandLine\TestOptionAttribute.GetOption.g.cs">
      <DependentUpon>TestOptionAttribute.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\BaseGenerationItem\TestBaseGenerationItem.addCommentFormat.g.cs">
      <DependentUpon>TestBaseGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\BaseGenerationItem\TestBaseGenerationItem.AddQACMessage.g.cs" />
    <Compile Include="Business\Generation\BaseGenerationItem\TestBaseGenerationItem.AppendLine.g.cs">
      <DependentUpon>TestBaseGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\BaseGenerationItem\TestBaseGenerationItem.ComputeSpacesQAC.g.cs" />
    <Compile Include="Business\Generation\BaseGenerationItem\TestBaseGenerationItem.CreateQACMessage.g.cs" />
    <Compile Include="Business\Generation\BaseGenerationItem\TestBaseGenerationItem.cs" />
    <Compile Include="Business\Generation\BaseGenerationItem\TestBaseGenerationItem.Generate_1_Args.g.cs">
      <DependentUpon>TestBaseGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\BaseGenerationItem\TestBaseGenerationItem.Generate_2_Args.g.cs">
      <DependentUpon>TestBaseGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\BaseGenerationItem\TestBaseGenerationItem.SetLastItem.g.cs">
      <DependentUpon>TestBaseGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\BaseGenerationItem\TestBaseGenerationItem.SetLevel.g.cs">
      <DependentUpon>TestBaseGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\BaseGenerationItem\TestBaseGenerationItem.WrapText.g.cs">
      <DependentUpon>TestBaseGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\BreakLineGenerationItem\TestBreakLineGenerationItem.cs" />
    <Compile Include="Business\Generation\BreakLineGenerationItem\TestBreakLineGenerationItem.Generate.g.cs">
      <DependentUpon>TestBreakLineGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\CommentGenerationItem\TestCommentGenerationItem.CommentGenerationItem.cs">
      <DependentUpon>TestCommentGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\CommentGenerationItem\TestCommentGenerationItem.cs" />
    <Compile Include="Business\Generation\CommentGenerationItem\TestCommentGenerationItem.Generate.g.cs">
      <DependentUpon>TestCommentGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\DefineGenerationItem\TestDefineGenerationItem.computeSpaces.g.cs">
      <DependentUpon>TestDefineGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\DefineGenerationItem\TestDefineGenerationItem.cs" />
    <Compile Include="Business\Generation\DefineGenerationItem\TestDefineGenerationItem.Generate.g.cs">
      <DependentUpon>TestDefineGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestFileGeneration.cs" />
    <Compile Include="Business\Generation\FileGeneration\Auto\TestFileGeneration.FileGeneration.g.cs">
      <DependentUpon>TestFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestFileGeneration.GenCOPYRIGHTSection.g.cs">
      <DependentUpon>TestFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestFileGeneration.GenEND_OF_FILE.g.cs">
      <DependentUpon>TestFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestFileGeneration.GenIncludeSection.g.cs">
      <DependentUpon>TestFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestFileGeneration.GenRevisionHistorySection.g.cs">
      <DependentUpon>TestFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestFileGeneration.GenVersionInformationSection.g.cs">
      <DependentUpon>TestFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestFileGeneration.Gen_GentoolVersion.g.cs">
      <DependentUpon>TestFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestFileGeneration.Gen_InputFiles.g.cs">
      <DependentUpon>TestFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestHeaderFileGeneration.cs" />
    <Compile Include="Business\Generation\FileGeneration\Auto\TestHeaderFileGeneration.GenEND_MACRO.g.cs">
      <DependentUpon>TestHeaderFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestHeaderFileGeneration.GenFUNCTION_PROTOTYPE.g.cs">
      <DependentUpon>TestHeaderFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestHeaderFileGeneration.GenGLOBAL_DATA.g.cs">
      <DependentUpon>TestHeaderFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestHeaderFileGeneration.GenGLOBAL_DATA_TYPE.g.cs">
      <DependentUpon>TestHeaderFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestHeaderFileGeneration.GenGLOBAL_SYMBOLS.g.cs">
      <DependentUpon>TestHeaderFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestHeaderFileGeneration.GenREVISION_HISTORY.g.cs">
      <DependentUpon>TestHeaderFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestHeaderFileGeneration.GenSTART_MACRO.g.cs">
      <DependentUpon>TestHeaderFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestItemGenerationAttribute.cs" />
    <Compile Include="Business\Generation\FileGeneration\Auto\TestItemGenerationAttribute.GetSectionName_0_Args.g.cs">
      <DependentUpon>TestItemGenerationAttribute.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestItemGenerationAttribute.GetSectionName_1_Args.g.cs">
      <DependentUpon>TestItemGenerationAttribute.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestSection.cs" />
    <Compile Include="Business\Generation\FileGeneration\Auto\TestSection.Generate.g.cs">
      <DependentUpon>TestSection.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestSection.Section.g.cs">
      <DependentUpon>TestSection.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestSourceFileGeneration.cs" />
    <Compile Include="Business\Generation\FileGeneration\Auto\TestSourceFileGeneration.GenFUNTION_DEFINE.g.cs">
      <DependentUpon>TestSourceFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestSourceFileGeneration.GenGLOBAL_DATA.g.cs">
      <DependentUpon>TestSourceFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestSourceFileGeneration.GenGLOBAL_DATA_TYPE.g.cs">
      <DependentUpon>TestSourceFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestSourceFileGeneration.GenINSTANCE_INDEX.g.cs">
      <DependentUpon>TestSourceFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestSourceFileGeneration.GenREVISION_HISTORY.g.cs">
      <DependentUpon>TestSourceFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Auto\TestSourceFileGeneration.GenVERSION_CHECK.g.cs">
      <DependentUpon>TestSourceFileGeneration.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Manual\FileGeneration.Manual.cs" />
    <Compile Include="Business\Generation\FileGeneration\Manual\FileGeneration.Manual.GenerateFileTest.cs">
      <DependentUpon>FileGeneration.Manual.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Manual\FileGeneration.Manual.getAttrSectionOrderTest.cs">
      <DependentUpon>FileGeneration.Manual.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Manual\FileGeneration.Manual.getAttrSectionTest.cs">
      <DependentUpon>FileGeneration.Manual.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Manual\FileGeneration.ManualWriteToFileTest.cs">
      <DependentUpon>FileGeneration.Manual.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Manual\GenerationTest.GenerateOuputTest.g.cs">
      <DependentUpon>GenerationTest.Manual.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\FileGeneration\Manual\GenerationTest.Manual.cs" />
    <Compile Include="Business\Generation\StringGenerationItem\TestStringGenerationItem.cs" />
    <Compile Include="Business\Generation\StringGenerationItem\TestStringGenerationItem.Generate.g.cs">
      <DependentUpon>TestStringGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\StructGenerationItem\TestStructGenerationItem.AddChild.g.cs">
      <DependentUpon>TestStructGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\StructGenerationItem\TestStructGenerationItem.cs" />
    <Compile Include="Business\Generation\StructGenerationItem\TestStructGenerationItem.Generate.g.cs">
      <DependentUpon>TestStructGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\StructGenerationItem\TestStructGenerationItem.genFieldInStructure.g.cs">
      <DependentUpon>TestStructGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\StructGenerationItem\TestStructGenerationItem.genMemorySection.g.cs">
      <DependentUpon>TestStructGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\StructGenerationItem\TestStructGenerationItem.genSingleStruct.g.cs">
      <DependentUpon>TestStructGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\StructGenerationItem\TestStructGenerationItem.GenStructure.g.cs">
      <DependentUpon>TestStructGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\StructGenerationItem\TestStructGenerationItem.getQacMessage.g.cs">
      <DependentUpon>TestStructGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\StructGenerationItem\TestStructGenerationItem.isMemmapInsidePreCompile.g.cs">
      <DependentUpon>TestStructGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\StructMemberGenerationItem\TestStructMemberGenerationItem.cs" />
    <Compile Include="Business\Generation\StructMemberGenerationItem\TestStructMemberGenerationItem.Generate.g.cs">
      <DependentUpon>TestStructMemberGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Generation\VariableGenerationItem\TestVariableGenerationItem.cs" />
    <Compile Include="Business\Generation\VariableGenerationItem\TestVariableGenerationItem.Generate.g.cs">
      <DependentUpon>TestVariableGenerationItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Intermediate\BaseIntermediate.ComputeAllTest.cs">
      <DependentUpon>BaseIntermediateTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Intermediate\BaseIntermediateTest.cs" />
    <Compile Include="Business\Intermediate\TestBaseIntermediate.ComputeAutosarVersion.g.cs">
      <DependentUpon>TestBaseIntermediate.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Intermediate\TestBaseIntermediate.cs" />
    <Compile Include="Business\ParserXML\TestParserXML.BuildAndSaveContainerTree.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.BuildSubContainers.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.CheckAutosarVersion.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.CheckERR000025.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.CheckParamConfig.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.CheckRelationBswmdtAndCdf.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.CheckRequiredModules.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.CheckVariantPostBuildCDF.g.cs" />
    <Compile Include="Business\ParserXML\TestParserXML.convertToBool.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ConvertToContainer.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.convertToDouble.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.convertToLong.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.convertValueFromString.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.cs" />
    <Compile Include="Business\ParserXML\TestParserXML.GetDeviceName.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.GetMultiInstanceInformation.g.cs" />
    <Compile Include="Business\ParserXML\TestParserXML.GetRootPath.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.IsExistModuleName.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.LoadFiles.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.NeedVerifyVendorApiInfix.g.cs" />
    <Compile Include="Business\ParserXML\TestParserXML.ParseAndSaveBswConfiguration.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ParseAndSaveCDFFile.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ParseBswPackage.g.cs" />
    <Compile Include="Business\ParserXML\TestParserXML.ParseCDFs.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ParseConfiguration.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ParseContainerVariantItemValue.g.cs" />
    <Compile Include="Business\ParserXML\TestParserXML.ParseContent.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ParseDeviceFileSection.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ParseItemValue.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ParseSubElement.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ParseThruParameters.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ParseThruReferences.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ParseThruVariantPoint.g.cs" />
    <Compile Include="Business\ParserXML\TestParserXML.ParseTransFileSection.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ParseTranslationFile.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ParseVariantItemValue.g.cs" />
    <Compile Include="Business\ParserXML\TestParserXML.RunAll.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ShouldFilterOutConfiguration.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.UpdateBasicConfigurationIfNeeded.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ValidateBswConfigurationDetail.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\ParserXML\TestParserXML.ValidateBswConfigurationsGeneral.g.cs">
      <DependentUpon>TestParserXML.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Setting\TestInstanceSetting.AppendSuffixToMacro.g.cs" />
    <Compile Include="Business\Setting\TestInstanceSetting.cs" />
    <Compile Include="Business\Setting\TestInstanceSetting.GetInstanceSuffix.g.cs">
      <DependentUpon>TestInstanceSetting.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.addErrorMessage.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.CheckE_INT_INCONSISTENT.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.CheckForMandatoryParameters.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.checkRequiredFieldsOfSubstructs.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.CheckRequiredFieldsOfSubstructs_2_Args.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.CheckRequiredFieldsOfSubstructs_3_Args.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.checkSameFieldsOfSubstructs_1_Args.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.CheckSameFieldsOfSubstructs_2_Args.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.checkSameFieldsOfSubstructs_3_Args.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.Check_ERR_SPECIFIC_01.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.Check_ERR_SPECIFIC_02.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.cs" />
    <Compile Include="Business\Validation\TestBaseValidation.exitWithType.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.findFieldsOfAnyLastNodeStruct.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.GetAllStructureData.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.isMissingContainer.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.run.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.ValidatePostIntermediate.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestBaseValidation.ValidatePreIntermediate.g.cs">
      <DependentUpon>TestBaseValidation.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestValidationResult.AddMessage.g.cs">
      <DependentUpon>TestValidationResult.cs</DependentUpon>
    </Compile>
    <Compile Include="Business\Validation\TestValidationResult.cs" />
    <Compile Include="Business\Validation\TestValidationResult.IsError.g.cs">
      <DependentUpon>TestValidationResult.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\ConsoleWrapper\TestConsoleWrapper.cs" />
    <Compile Include="CrossCutting\ConsoleWrapper\TestConsoleWrapper.WriteLine.g.cs">
      <DependentUpon>TestConsoleWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\EnvironmentWrapper\TestEnvironmentWrapper.cs" />
    <Compile Include="CrossCutting\EnvironmentWrapper\TestEnvironmentWrapper.Exit.g.cs">
      <DependentUpon>TestEnvironmentWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.CreateDirectory.g.cs">
      <DependentUpon>TestIOWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.cs" />
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.DirectoryExists.g.cs">
      <DependentUpon>TestIOWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.exit.g.cs">
      <DependentUpon>TestIOWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.FileExists.g.cs">
      <DependentUpon>TestIOWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.GetCurrentDirectory.g.cs">
      <DependentUpon>TestIOWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.GetFileName.g.cs">
      <DependentUpon>TestIOWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.GetFiles.g.cs">
      <DependentUpon>TestIOWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.GetFullPath.g.cs">
      <DependentUpon>TestIOWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.LoadXML.g.cs">
      <DependentUpon>TestIOWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.ReadAllLines.g.cs">
      <DependentUpon>TestIOWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.ReadLines.g.cs">
      <DependentUpon>TestIOWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.StreamWrite.g.cs">
      <DependentUpon>TestIOWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\IOWrapper\TestIOWrapper.StreamWriteLine.g.cs">
      <DependentUpon>TestIOWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\ObjectFactory\ObjectFactory.checkConditionTypeTest.cs">
      <DependentUpon>ObjectFactoryTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\ObjectFactory\ObjectFactory.createInstanceTest.cs">
      <DependentUpon>ObjectFactoryTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\ObjectFactory\ObjectFactory.getCacheObjectsOfInterfaceTest.cs">
      <DependentUpon>ObjectFactoryTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\ObjectFactory\ObjectFactory.GetIntancesTest.cs">
      <DependentUpon>ObjectFactoryTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\ObjectFactory\ObjectFactory.GetIntanceTest.cs">
      <DependentUpon>ObjectFactoryTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\ObjectFactory\ObjectFactory.ResgisterAssemblyTypesTest.cs">
      <DependentUpon>ObjectFactoryTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\ObjectFactory\ObjectFactoryTest.cs" />
    <Compile Include="CrossCutting\ObjectFactory\TestObjectFactory.ClearCache.g.cs">
      <DependentUpon>ObjectFactoryTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\ReflectionWrapper\TestReflectionWrapper.cs" />
    <Compile Include="CrossCutting\ReflectionWrapper\TestReflectionWrapper.Exit.g.cs">
      <DependentUpon>TestReflectionWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\ReflectionWrapper\TestReflectionWrapper.LoadFile.g.cs">
      <DependentUpon>TestReflectionWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\ReflectionWrapper\TestReflectionWrapper.LoadFrom.g.cs">
      <DependentUpon>TestReflectionWrapper.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.AppendDirectorySeparatorChar.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.CompareShortName.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.cs" />
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.DoubleToString.cs" />
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.FindString.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.GetElementLastInArray.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.GetQacSignChar.g.cs" />
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.GetRelativePath.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.GetStringFromTemplate.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.IsHex.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.IsInvalidName.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.IsNameSyntaxAsC.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.IsNullPointer.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.ParseHexToInt.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.ParseHexToUInt.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.parseShortName.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.replaceStringByTemplate.g.cs">
      <DependentUpon>TestStringUtils.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.StringSeparateWith.g.cs" />
    <Compile Include="CrossCutting\StringUtils\TestStringUtils.StringToDouble.g.cs" />
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.cs" />
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.Error.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.ErrorFileNotFound.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.ErrorModuleNotFound.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.Exit.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.ExitInt32.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.getCallerClass.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.getDateTime.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.Info.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.infoErrorCode.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.OpenFile.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.report.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.textWrap.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.Warn.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="CrossCutting\UserInterface\TestUserInterface.WriteLog.g.cs">
      <DependentUpon>TestUserInterface.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\BasicConfiguration\TestBasicConfiguration.AppendInstanceToFileName.g.cs" />
    <Compile Include="Data\BasicConfiguration\TestBasicConfiguration.AppendInstanceToMacro.g.cs" />
    <Compile Include="Data\BasicConfiguration\TestBasicConfiguration.cs" />
    <Compile Include="Data\BasicConfiguration\TestBasicConfiguration.ToInstanceValue.g.cs" />
    <Compile Include="Data\CDFData\BasicRegisterProcessing\TestBaseRegisterProcessing.cs" />
    <Compile Include="Data\CDFData\BasicRegisterProcessing\TestBaseRegisterProcessing.GetAddressType.g.cs">
      <DependentUpon>TestBaseRegisterProcessing.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\BasicRegisterProcessing\TestBaseRegisterProcessing.GetMacroAddressValue.g.cs">
      <DependentUpon>TestBaseRegisterProcessing.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\BasicRegisterProcessing\TestBaseRegisterProcessing.GetMacroLabelValue.g.cs">
      <DependentUpon>TestBaseRegisterProcessing.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\BasicRegisterProcessing\TestBaseRegisterProcessing.IsRegisterExist.g.cs">
      <DependentUpon>TestBaseRegisterProcessing.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\BasicRegisterProcessing\TestBaseRegisterProcessing.SaveMacroAddressValue.g.cs">
      <DependentUpon>TestBaseRegisterProcessing.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\BasicRegisterProcessing\TestBaseRegisterProcessing.SaveMacroLabelValue.g.cs">
      <DependentUpon>TestBaseRegisterProcessing.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.addInstanceIfNeeded.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.cs" />
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.GetAllInstanceConfigurations.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.GetAllInstanceContainers.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.GetBswConfiguration.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.GetBswConfigurations.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.GetCdfFile.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.getContainerByShortName.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.GetContainerByUUID.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.GetCurrentInstanceBswConfig.g.cs" />
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.GetCurrentInstanceConfiguration.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.GetCurrentInstanceContainers.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.getCurrentInstanceKey.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.GetEvaluatedVariantSet.g.cs" />
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.GetModules.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.GetVariantCriterionModuleConfig.g.cs" />
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.GetVariantCriterionSet.g.cs" />
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.isCurrentInstanceAvailable.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.PrepareInstance.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.SaveBswConfiguration.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.SaveCdfFiles.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.SaveConfiguration.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.SaveContainer.g.cs">
      <DependentUpon>TestCdfDataDictionary.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.SaveEvaluatedVariantSet.g.cs" />
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.SaveVariantCriterionModuleConfig.g.cs" />
    <Compile Include="Data\CDFData\CdfDataDictionary\TestCdfDataDictionary.SaveVariantCriterionSet.g.cs" />
    <Compile Include="Data\CDFData\Items\Container\TestContainer.Compare.g.cs">
      <DependentUpon>TestContainer.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\Items\Container\TestContainer.cs" />
    <Compile Include="Data\CDFData\Items\Container\TestContainer.Equals.g.cs">
      <DependentUpon>TestContainer.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\Items\Container\TestContainer.GetChildByDefName.g.cs">
      <DependentUpon>TestContainer.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\Items\Container\TestContainer.GetChildsByDefName.g.cs">
      <DependentUpon>TestContainer.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\Items\Container\TestContainer.GetDescendant.g.cs">
      <DependentUpon>TestContainer.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\Items\Container\TestContainer.GetHashCode.g.cs">
      <DependentUpon>TestContainer.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\Items\Container\TestContainer.GetParameterValue.g.cs">
      <DependentUpon>TestContainer.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\Items\Container\TestContainer.GetParameterValues.g.cs">
      <DependentUpon>TestContainer.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\Items\Container\TestContainer.GetReferenceValue.g.cs">
      <DependentUpon>TestContainer.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\Items\Container\TestContainer.GetReferenceValues.g.cs">
      <DependentUpon>TestContainer.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\Items\ItemValue\TestItemValue.addVariantValue.g.cs" />
    <Compile Include="Data\CDFData\Items\ItemValue\TestItemValue.cs" />
    <Compile Include="Data\CDFData\Items\ItemValue\TestItemValue.DefinitionRef.g.cs">
      <DependentUpon>TestItemValue.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\Items\ItemValue\TestItemValue.getListVariantIDs.g.cs" />
    <Compile Include="Data\CDFData\Items\ItemValue\TestItemValue.getVariantIDs.g.cs" />
    <Compile Include="Data\CDFData\Items\ItemValue\TestItemValue.getVariantItem.g.cs" />
    <Compile Include="Data\CDFData\Items\ItemValue\TestItemValue.InternalValue.g.cs">
      <DependentUpon>TestItemValue.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\Items\ItemValue\TestItemValue.Value.g.cs">
      <DependentUpon>TestItemValue.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\Items\VariantItemValue\TestVariantItemValue.cs" />
    <Compile Include="Data\CDFData\Items\VariantItemValue\TestVariantItemValue.InternalValue.g.cs" />
    <Compile Include="Data\CDFData\Items\VariantItemValue\TestVariantItemValue.Value.g.cs" />
    <Compile Include="Data\CDFData\Items\VariantItemValue\TestVariantItemValue.VariantID.g.cs" />
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.CheckVariantContainerSupported.g.cs" />
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.CheckVariantParameterSupported.g.cs" />
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.ComputeDemEventParams.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.ComputeOnOffParams.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.cs" />
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetAddressByMacroDefinition.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetAddressType.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetAddressTypeByMacroDefinition.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetAllInstancesContainersByDefName.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetAllVariantConfiguration.g.cs" />
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetCdfFileName.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetChilds.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetConfiguration.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetConfigurations.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetContainer.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetContainerByDefName.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetContainerByShortNamePath.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetContainers.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.getContainersByDefName.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.getContainersByDefName_sortOption.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetMacroAddressValue.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetMacroLabelValue.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetParameterValue.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetParameterValues.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetReferenceValue.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetReferenceValues.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetShortNameVariantConfig.g.cs" />
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetStartOfDbToc.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetVersionInformation.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.GetVersionInformation_0_Args.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.initVersionInformation.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.IsExistedPath.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.IsExistModuleName.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.IsRegisterExist.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.PrepareInstance.g.cs">
      <DependentUpon>TestRepositoryLinQ.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\CDFData\RepositoryLinQ\TestRepositoryLinQ.UpdateBasicConfig.g.cs" />
    <Compile Include="Data\IntermediateData\Items\TestBaseIntermediateItem.AddChild.g.cs">
      <DependentUpon>TestBaseIntermediateItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\IntermediateData\Items\TestBaseIntermediateItem.cs" />
    <Compile Include="Data\IntermediateData\Items\TestBaseIntermediateItem.GetItemByPath.g.cs">
      <DependentUpon>TestBaseIntermediateItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\IntermediateData\Items\TestBaseIntermediateItem.GetStringDataByPath.g.cs">
      <DependentUpon>TestBaseIntermediateItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\IntermediateData\Items\TestBaseIntermediateItem.Store.g.cs">
      <DependentUpon>TestBaseIntermediateItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\IntermediateData\Items\TestBaseIntermediateItem.ToString.g.cs">
      <DependentUpon>TestBaseIntermediateItem.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\IntermediateData\Items\TestIntermediateData.cs" />
    <Compile Include="Data\IntermediateData\Items\TestIntermediateData.GetItemByPath.g.cs">
      <DependentUpon>TestIntermediateData.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\IntermediateData\Items\TestIntermediateData.GetRoot.g.cs">
      <DependentUpon>TestIntermediateData.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\IntermediateData\Items\TestIntermediateData.GetStringDataByPath.g.cs">
      <DependentUpon>TestIntermediateData.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\IntermediateData\Items\TestIntermediateData.Store.g.cs">
      <DependentUpon>TestIntermediateData.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\RuntimeConfiguration\TestRuntimeConfiguration.concatPaths.g.cs">
      <DependentUpon>TestRuntimeConfiguration.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\RuntimeConfiguration\TestRuntimeConfiguration.cs" />
    <Compile Include="Data\RuntimeConfiguration\TestRuntimeConfiguration.GetAllCmdOptions.g.cs">
      <DependentUpon>TestRuntimeConfiguration.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\RuntimeConfiguration\TestRuntimeConfiguration.getCmdOptions.g.cs">
      <DependentUpon>TestRuntimeConfiguration.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\RuntimeConfiguration\TestRuntimeConfiguration.GetSingleCmdOptions.g.cs">
      <DependentUpon>TestRuntimeConfiguration.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\RuntimeConfiguration\TestRuntimeConfiguration.OverrideCurrentConfigsBy.g.cs">
      <DependentUpon>TestRuntimeConfiguration.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\RuntimeConfiguration\TestRuntimeConfiguration.overrideFiles.g.cs">
      <DependentUpon>TestRuntimeConfiguration.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\RuntimeConfiguration\TestRuntimeConfiguration.overrideOptions.g.cs">
      <DependentUpon>TestRuntimeConfiguration.cs</DependentUpon>
    </Compile>
    <Compile Include="Data\RuntimeConfiguration\TestRuntimeConfiguration.SetDefaultOptionsValue.g.cs">
      <DependentUpon>TestRuntimeConfiguration.cs</DependentUpon>
    </Compile>
    <Compile Include="Presentation\TestMainEntry.collectExceptionHierarchyInfo.g.cs">
      <DependentUpon>TestMainEntry.cs</DependentUpon>
    </Compile>
    <Compile Include="Presentation\TestMainEntry.cs" />
    <Compile Include="Presentation\TestMainEntry.getModuleName.g.cs">
      <DependentUpon>TestMainEntry.cs</DependentUpon>
    </Compile>
    <Compile Include="Presentation\TestMainEntry.loadConfiguration.g.cs">
      <DependentUpon>TestMainEntry.cs</DependentUpon>
    </Compile>
    <Compile Include="Presentation\TestMainEntry.Main.g.cs">
      <DependentUpon>TestMainEntry.cs</DependentUpon>
    </Compile>
    <Compile Include="Presentation\TestMainEntry.printInfoIfNeed.g.cs">
      <DependentUpon>TestMainEntry.cs</DependentUpon>
    </Compile>
    <Compile Include="Presentation\TestMainEntry.registerAssemblyTypes.g.cs">
      <DependentUpon>TestMainEntry.cs</DependentUpon>
    </Compile>
    <Compile Include="Presentation\TestMainEntry.unhandledExceptionHandler.g.cs">
      <DependentUpon>TestMainEntry.cs</DependentUpon>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <Fakes Include="Fakes\System.fakes" />
    <Fakes Include="Fakes\mscorlib.fakes" />
    <Fakes Include="Fakes\System.XML.fakes" />
    <Fakes Include="Fakes\System.Xml.Linq.fakes" />
    <Fakes Include="Fakes\MCALConfGen.fakes" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\..\..\..\..\Module_RH850\generic\06_CD\01_WorkProduct\generator_cs\MCALConfGen\MCALConfGen.csproj">
      <Project>{d1fcd54e-251c-4221-9ff7-b56ea43c2a0e}</Project>
      <Name>MCALConfGen</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.props'))" />
    <Error Condition="!Exists('..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.targets'))" />
  </Target>
  <Import Project="..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.targets" Condition="Exists('..\packages\MSTest.TestAdapter.1.3.2\build\net45\MSTest.TestAdapter.targets')" />
</Project>